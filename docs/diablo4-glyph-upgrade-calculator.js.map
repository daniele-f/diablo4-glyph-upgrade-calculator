{"version":3,"file":"diablo4-glyph-upgrade-calculator.js","mappings":"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","sources":["webpack://diablo4-glyph-upgrade-calculator/webpack/universalModuleDefinition","webpack://diablo4-glyph-upgrade-calculator/../../../../src/main/kotlin/main.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../src/main/kotlin/script.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ComparisonsJs.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/globalThis.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/math.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Char.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/BitMask.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/charSequenceJs.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/numberConversion.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/unsigned/src/kotlin/UShort.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/coreRuntime.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/metadataUtils.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/typeCheckUtils.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Standard.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_DigitChars.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/Unit.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/exceptions.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/numberConversions.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Primitives.kt","webpack://diablo4-glyph-upgrade-calculator/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringNumberConversions.kt","webpack://diablo4-glyph-upgrade-calculator/webpack/bootstrap","webpack://diablo4-glyph-upgrade-calculator/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"diablo4-glyph-upgrade-calculator\"] = factory();\n\telse\n\t\troot[\"diablo4-glyph-upgrade-calculator\"] = factory();\n})(globalThis, () => {\nreturn ","import kotlinx.browser.document\r\nimport org.w3c.dom.HTMLButtonElement\r\nimport org.w3c.dom.HTMLInputElement\r\n\r\nfun main() {\r\n    // Initial calculation\r\n    updateResults()\r\n    updateStoneCost()\r\n\r\n    (document.getElementById(\"glyphLevel\") as? HTMLInputElement)?.addEventListener(\"input\", { updateResults() })\r\n    (document.getElementById(\"adjustGlyphLevelAdd\") as? HTMLButtonElement)?.addEventListener(\"click\", { adjustGlyphLevel(1) })\r\n    (document.getElementById(\"adjustGlyphLevelSub\") as? HTMLButtonElement)?.addEventListener(\"click\", { adjustGlyphLevel(-1) })\r\n    (document.getElementById(\"resetGlyphLevel\") as? HTMLButtonElement)?.addEventListener(\"click\", { resetGlyphLevel() })\r\n    (document.getElementById(\"noDeathBonus\") as? HTMLInputElement)?.addEventListener(\"change\", { updateResults() })\r\n    (document.getElementById(\"calcPlus20\") as? HTMLInputElement)?.addEventListener(\"change\", { updateResults() })\r\n    (document.getElementById(\"applyFinalLevel\") as? HTMLButtonElement)?.addEventListener(\"click\", { applyFinalLevel() })\r\n\r\n    (document.getElementById(\"currentLevel\") as? HTMLInputElement)?.addEventListener(\"input\", { updateStoneCost() })\r\n    (document.getElementById(\"desiredLevel\") as? HTMLInputElement)?.addEventListener(\"input\", { updateStoneCost() })\r\n    (document.getElementById(\"setRange1To15\") as? HTMLButtonElement)?.addEventListener(\"click\", { setRange(1, 15) })\r\n    (document.getElementById(\"setRange15To46\") as? HTMLButtonElement)?.addEventListener(\"click\", { setRange(15, 46) })\r\n    (document.getElementById(\"setRange46To100\") as? HTMLButtonElement)?.addEventListener(\"click\", { setRange(46, 100) })\r\n    (document.getElementById(\"stoneNoDeath\") as? HTMLInputElement)?.addEventListener(\"change\", { updateStoneCost() })\r\n    (document.getElementById(\"pitPlus20\") as? HTMLInputElement)?.addEventListener(\"change\", { updateStoneCost() })\r\n}\r\n","import kotlinx.browser.document\r\nimport org.w3c.dom.HTMLInputElement\r\n\r\nprivate var lastFinalGlyphLevel = 1\r\n\r\nfun updateResults() {\r\n    val glyphInput = document.getElementById(\"glyphLevel\") as? HTMLInputElement\r\n    val noDeathBonus = document.getElementById(\"noDeathBonus\") as? HTMLInputElement\r\n    val calcPlus20 = document.getElementById(\"calcPlus20\") as? HTMLInputElement\r\n    val output = document.getElementById(\"output\")\r\n\r\n    val glyphLevel = glyphInput?.value?.toIntOrNull() ?: 1\r\n    val attempts = if (noDeathBonus?.checked == true) 4 else 3\r\n    val extraUpgrade = if (calcPlus20?.checked == true) 1 else 0\r\n\r\n    if (glyphLevel < 1) {\r\n        output?.textContent = \"Please enter a valid glyph level (1 or higher).\"\r\n        return\r\n    }\r\n\r\n    val finalGlyphLevel = glyphLevel + attempts - 1 + extraUpgrade\r\n    lastFinalGlyphLevel = finalGlyphLevel\r\n    val requiredPit = if (calcPlus20?.checked == true) glyphLevel + 20 else finalGlyphLevel + 10\r\n\r\n    output?.innerHTML = \"<strong>Minimum Pit Level: $requiredPit</strong><br>\" +\r\n            \"Glyph level after run: <strong>$finalGlyphLevel</strong>\"\r\n}\r\n\r\nfun adjustGlyphLevel(delta: Int) {\r\n    val glyphInput = document.getElementById(\"glyphLevel\") as? HTMLInputElement\r\n    val current = glyphInput?.value?.toIntOrNull() ?: 1\r\n    val newValue = maxOf(1, current + delta)\r\n    glyphInput?.value = newValue.toString()\r\n    updateResults()\r\n}\r\n\r\nfun resetGlyphLevel() {\r\n    val glyphInput = document.getElementById(\"glyphLevel\") as? HTMLInputElement\r\n    glyphInput?.value = \"1\"\r\n    updateResults()\r\n}\r\n\r\nfun applyFinalLevel() {\r\n    val glyphInput = document.getElementById(\"glyphLevel\") as? HTMLInputElement\r\n    glyphInput?.value = lastFinalGlyphLevel.toString()\r\n    updateResults()\r\n}\r\n\r\nfun updateStoneCost() {\r\n    val currentLevel = document.getElementById(\"currentLevel\") as? HTMLInputElement\r\n    val desiredLevel = document.getElementById(\"desiredLevel\") as? HTMLInputElement\r\n    val stoneNoDeath = document.getElementById(\"stoneNoDeath\") as? HTMLInputElement\r\n    val pitPlus20 = document.getElementById(\"pitPlus20\") as? HTMLInputElement\r\n    val stoneOutput = document.getElementById(\"stoneOutput\")\r\n\r\n    val from = currentLevel?.value?.toIntOrNull() ?: 1\r\n    val to = desiredLevel?.value?.toIntOrNull() ?: 1\r\n    var stones = 0\r\n    var runs = 0\r\n    val upgradesPerRun = if (stoneNoDeath?.checked == true) 4 else 3\r\n\r\n    if (from < 1 || to <= from) {\r\n        stoneOutput?.textContent = \"Please enter valid levels (desired must be higher than current).\"\r\n        return\r\n    }\r\n\r\n    var level = from\r\n    while (level < to) {\r\n        val gain = if (pitPlus20?.checked == true) upgradesPerRun + 1 else upgradesPerRun\r\n        level += gain\r\n        stones += 3\r\n        runs += 1\r\n    }\r\n\r\n    stoneOutput?.innerHTML = \"<strong>Minimum Runs Needed: $runs</strong><br><strong>Total Artificer's Stones Needed: $stones</strong>\"\r\n}\r\n\r\nfun setRange(start: Int, end: Int) {\r\n    val currentLevel = document.getElementById(\"currentLevel\") as? HTMLInputElement\r\n    val desiredLevel = document.getElementById(\"desiredLevel\") as? HTMLInputElement\r\n    currentLevel?.value = start.toString()\r\n    desiredLevel?.value = end.toString()\r\n    updateStoneCost()\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(220);\n"],"names":["root","factory","exports","module","define","amd","globalThis","it","updateResults","adjustGlyphLevel","document","getElementById","glyphInput","value","lastFinalGlyphLevel","toString","updateStoneCost","setRange","noDeathBonus","calcPlus20","output","toIntOrNull","glyphLevel","attempts","checked","extraUpgrade","textContent","finalGlyphLevel","requiredPit","innerHTML","delta","newValue","currentLevel","desiredLevel","stoneNoDeath","pitPlus20","stoneOutput","from","to","stones","runs","upgradesPerRun","level","start","end","addEventListener","a","b","other","interfaces","maxSize","masks","i","currentSize","imask","iid","iidImask","numberIndex","intArray","numberWithSettledBit","activeBit","capacity","result","mask","index","code","proto","instance","constructorFunction","constructor","this_","message","cause","errorInfo","kind","ctor","name","defaultConstructor","parent","suspendArity","associatedObjectKey","associatedObjects","obj1","obj2","metadata","obj","parentProto","propName","Exception_init_$Init$","RuntimeException_init_$Init$","char","radix","ch","diff","array","needle","bottom","top","middle","IllegalArgumentException_init_$Init$","<this>","isNegative","limit","length","firstChar","limitForMaxRadix","limitBeforeMul","digit","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}